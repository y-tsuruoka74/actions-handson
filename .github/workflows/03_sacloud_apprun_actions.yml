name: 03 Sacloud Apprun Actions

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: チェックアウト
        uses: actions/checkout@v4

      - name: Goアプリをデプロイ
        id: deploy
        uses: ippanpeople/sacloud-apprun-action@v0.0.4
        with:
          use-repository-dockerfile: false
          app-dir: ./03_sacloud_apprun_actions
          sakura-api-key: ${{ secrets.SAKURA_API_KEY }}
          sakura-api-secret: ${{ secrets.SAKURA_API_SECRET }}
          container-registry: ${{ secrets.REGISTRY }}
          container-registry-user: ${{ secrets.REGISTRY_USER }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          port: '8080'
          # SQLite + Litestream を使う場合は以下も指定
          object-storage-bucket: w-rin-test
          object-storage-access-key: ${{ secrets.STORAGE_ACCESS_KEY }}
          object-storage-secret-key: ${{ secrets.STORAGE_SECRET_KEY }}
          sqlite-db-path: ./data/app.db
          litestream-replicate-interval: 10s

      - name: DEPLOY_PUBLIC_URLを環境変数に設定
        run: echo "DEPLOY_PUBLIC_URL=$(echo \"${{ steps.deploy.outputs.public-url }}\" | sed 's/\\//g')" >> $GITHUB_ENV
        env:
          PUBLIC_URL: ${{ steps.deploy.outputs.public-url }}

      - name: デプロイ結果を通知
        if: env.DEPLOY_PUBLIC_URL != ''
        uses: ippanpeople/slack-notify-action@v0.0.5
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          thread_ts: "1753841974.019389"
          pretext: "STEP3: sacloud apprun action ✅ <!channel>"
          author_name: ":github_white: ${{ vars.AUTHOR_NAME }}"
          repository: "${{ vars.REPOSITORY }}"
          message: ":deploy: ${{ env.DEPLOY_PUBLIC_URL }}"
